#Server-Config
server:
    port: ${BRAND_APP_PORT:8068}
    servlet:
        context-path: /dev

#App Config
spring:
    application:
        name: ${BRAND_APP_NAME:WESHOPIFY-BRAND-SERVICE}
    profiles:
        active: ${BRAND_APP_PROFILE:dev}

---
spring:
    config:
        activate:
            on-profile: dev
#MongoDB Config
    data:
        mongodb:
            host: ${BRAND_APP_MONGO_HOST:localhost}
            port: ${BRAND_APP_MONGO_PORT:27017}
#            username: ${BRANS_APP_MONGO_USERNAME:mongo}
#            password: ${BRANS_APP_MONGO_PASS:mongo}
            auto-index-creation: ${BRAND_APP_MONGO_INDEX:true}
            database: weshopify_brands

#Log Config
logging:
    file:
        name: ${BRAND_APP_LOG_FILE:D:/logs/codebrains/brands/logs}
    pattern:
        console: '%d{yyyy-mm-dd HH:mm:ss.SSS} %-5level %logger{5} [%file:%line] - %msg%n'
        file: '%d{yyyy-mm-dd HH:mm:ss.SSS} [%thread] %-5level &logger{20} [%file:%line] - %msg%n'
    level:
        root: ERROR
        org:
            springframework: ERROR
            cb: DEBUG

#Eureka Config
eureka:
    client:
        fetch-registry: true
        register-with-eureka: true
        service-url:
            defaultZone: ${EUREKA_URL:http://localhost:8761/eureka}
    instance:
        instance-id: ${spring.application.name}:${random.uuid}

#Circuit Breaker Configuration
resilience4j:
    circuitbreaker:
        metrics:
            enabled: true
            # This Property is used to register all circuit breakers health related information
            # to microservices actuator. By default, this configuration is disabled.
        configs:
            default:
                register-health-indicator: true
        instances:
            create-brands-circuitbreaker:
                # This will inform to circuit breaker to monitor the minimum of 5 request to our
                # api, to Open or close the circuit the default value is 50
                minimum-number-of-calls: 5
                # Informing to circuit breaker to consider the threashold open the circuit
                # here 50% means, the 50% of 5 request coming example : 2.5 ~ 3 are failing
                # then the circuit will open, So that it will open the circuit fail fast and will give the response
                failure-rate-threshold: 50

                wait-duration-in-open-state: 30000
                permitted-number-of-calls-in-half-open-state: 2
    retry:
        metrics:
            enabled: true
        instances:
            create-brands-retry:
                max-attempts: 3
                wait-duration: 2s
    ratelimiter:
        configs:
          default:
              register-health-indicator: true
        instances:
            create-brands-ratelimiter:
                limit-for-period: 10
                limit-refresh-period: 30s
                timeout-duration: 120s

#Actuator Config
management:
    endpoint:
        health:
            probes:
                enabled: true
        circuitbreakers:
            enabled: true
    endpoints:
        web:
            exposure:
                include: '*'
---
spring:
    config:
        activate:
            on-profile: qa
    #H2 Config
    h2:
        console:
            enabled: true
            path: /h2-console
    datasource:
        driver-class-name: org.h2.Driver
        username: sa
        password: sa
        url: jdbc:h2:mem:weshopify-brands-svc

#Log Config
logging:
    file:
        name: ${BRAND_APP_LOG_FILE:D:/logs/codebrains/brands/logs}
    pattern:
        console: '%d{yyyy-mm-dd HH:mm:ss.SSS} %-5level %logger{5} [%file:%line] - %msg%n'
        file: '%d{yyyy-mm-dd HH:mm:ss.SSS} [%thread] %-5level &logger{20} [%file:%line] - %msg%n'
    level:
        root: ERROR
        org:
            springframework: ERROR
            cb: DEBUG

#Eureka Config
eureka:
    client:
        fetch-registry: true
        register-with-eureka: true
        service-url:
            defaultZone: ${EUREKA_URL:http://localhost:8761/eureka}
    instance:
        instance-id: ${spring.application.name}:${random.uuid}

#Circuit Breaker Configuration
resilience4j:
    circuitbreaker:
        metrics:
            enabled: true
            # This Property is used to register all circuit breakers health related information
            # to microservices actuator. By default, this configuration is disabled.
        configs:
            default:
                register-health-indicator: true
        instances:
            create-brands-circuitbreaker:
                # This will inform to circuit breaker to monitor the minimum of 5 request to our
                # api, to Open or close the circuit the default value is 50
                minimum-number-of-calls: 5
                # Informing to circuit breaker to consider the threashold open the circuit
                # here 50% means, the 50% of 5 request coming example : 2.5 ~ 3 are failing
                # then the circuit will open, So that it will open the circuit fail fast and will give the response
                failure-rate-threshold: 50

                wait-duration-in-open-state: 30000
                permitted-number-of-calls-in-half-open-state: 2
